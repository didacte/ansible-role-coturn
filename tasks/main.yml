---

- name: Install coturn
  ansible.legacy.package:
    name: coturn
    state: "{{ coturn_install_state }}"

- name: Manage tls permissions
  block:
  - name: Fail if tls should be used but required values are not set
    ansible.legacy.assert:
      that:
        - coturn_tls_listening_port is defined and coturn_tls_listening_port is truthy
        - coturn_tls_cert_dir is defined and coturn_tls_cert_dir is truthy
        - coturn_tls_cert is defined and coturn_tls_cert is truthy
        - coturn_tls_key is defined and coturn_tls_key is truthy
  - name: Add turnserver user to TLS group
    ansible.legacy.user:
      name: "{{ turn_user }}"
      groups: "{{ coturn_tls_group }}"
      append: true
    when: coturn_tls_group is defined

  - name: Get file info of TLS Folder
    ansible.legacy.stat:
      path: "{{ coturn_tls_cert_dir }}"
    register: stat_coturn_tls_cert_dir

  - name: Get info of cert post hooks folder
    ansible.legacy.stat:
      path: /etc/letsencrypt/renewal-hooks/post
    register: certbot_post_hooks

  - name: Get info of cert pre hooks folder
    ansible.legacy.stat:
      path: /etc/letsencrypt/renewal-hooks/post
    register: certbot_pre_hooks

  - name: Grant turnserver user access to certificate folder
    ansible.posix.acl:
      path: "{{ coturn_tls_cert_dir }}"
      entity: "{{ turn_user }}"
      etype: user
      permissions: rx
      recursive: yes
      state: present
    when: stat_coturn_tls_cert_dir.stat.exists

  - name: Setup certbot pre hooks
    ansible.legacy.template:
      src: "{{ item }}"
      dest: "/etc/letsencrypt/renewal-hooks/pre/{{ item | basename | regex_replace('\\.j2$', '') }}.sh"
      owner: "root"
      group: "root"
      mode: "0755"
    with_fileglob:
      - "../templates/certbot/pre/*.j2"
    when: certbot_pre_hooks.stat.exists

  - name: Setup certbot post hooks
    ansible.legacy.template:
      src: "{{ item }}"
      dest: "/etc/letsencrypt/renewal-hooks/post/{{ item | basename | regex_replace('\\.j2$', '') }}.sh"
      owner: "root"
      group: "root"
      mode: "0755"
    with_fileglob:
      - "../templates/certbot/post/*.j2"
    when: certbot_post_hooks.stat.exists

  - name: Copy Diffie-Hellmann parameter (from https://ssl-config.mozilla.org/ffdhe2048.txt)
    ansible.legacy.copy:
      src: dhparam.pem
      dest: /etc/dhparam.pem
      owner: root
      group: root
      mode: '0644'
    when: coturn_use_tls

- name: Create systemd override for coturn
  block:
    - name: Create needed folder
      ansible.legacy.file:
        path: /etc/systemd/system/coturn.service.d/
        state: directory
        mode: '0755'
    - name: Copy coturn systemd override file
      ansible.legacy.copy:
        src: override.conf
        dest: /etc/systemd/system/coturn.service.d/override.conf
        owner: root
        group: root
        mode: '0644'
      notify:
        - Systemd daemon-reload
        - Restart coturn

- name: Create lograte structure
  block:
    - name: Create needed folder
      ansible.legacy.file:
        path: /var/log/turnserver
        owner: "{{ turn_user }}"
        group: "{{ turn_user }}"
        state: directory
        mode: '0755'
    - name: Copy logrotate config
      ansible.legacy.copy:
        src: logging.conf
        dest: /etc/logrotate.d/coturn
        owner: root
        group: root
        mode: '0644'

- name: Configure coturn
  ansible.legacy.template:
    src: turnserver.conf.j2
    dest: /etc/turnserver.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart coturn

- name: Configure firewall on ubuntu
  ansible.legacy.include_tasks: ufw.yml
  when: ansible_os_family == 'Debian'

- name: Configure firewall on Centos
  ansible.legacy.include_tasks: firewalld.yml
  when: ansible_os_family == 'RedHat'
